# Generated by Django 5.1.6 on 2025-04-07 11:25

import api.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('grade', models.CharField(choices=[('PR', 'Professeur'), ('MC', 'Maître de conférences'), ('DR', 'Docteur'), ('ATER', "Attaché temporaire d'enseignement et de recherche"), ('VAC', 'Vacataire')], max_length=10)),
                ('specialite', models.CharField(max_length=100)),
                ('etablissement', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Filiere',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('libelle', models.CharField(max_length=100)),
                ('niveau', models.CharField(choices=[('L3', 'Licence 3'), ('M2', 'Master 2')], default='L3', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', api.models.LowercaseEmailField(max_length=191, unique=True)),
                ('nom', models.CharField(max_length=150)),
                ('prenom', models.CharField(max_length=150)),
                ('username', models.CharField(blank=True, max_length=150)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('phone', models.CharField(blank=True, max_length=150, null=True, validators=[django.core.validators.RegexValidator(message='phone number should exactly be in 10 digits', regex='^\\d{10}$')])),
                ('type_user', models.CharField(choices=[('admin', 'Administrateur'), ('responsable', 'Responsable'), ('organisation', 'ORGANISATION')], default='organisation', max_length=50, verbose_name="Type d'utilisateur")),
                ('is_approved', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Etudiant',
            fields=[
                ('matricule', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('date_naissance', models.DateField()),
                ('lieu_naissance', models.CharField(max_length=100)),
                ('maitre_memoire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='etudiants_encadres', to='api.enseignant')),
                ('filiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etudiants', to='api.filiere')),
            ],
        ),
        migrations.CreateModel(
            name='Binome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(max_length=200, verbose_name='Thème de recherche')),
                ('programmation', models.CharField(choices=[('est programmé', 'Est programmé'), ('non programmé', 'Non programmé'), ('refus', 'Refus')], default='non programmé', max_length=50, verbose_name='Statut de programmation')),
                ('maitre_memoire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='binomes_encadres', to='api.enseignant', verbose_name='Maître de mémoire')),
                ('etudiants', models.ManyToManyField(related_name='binomes', to='api.etudiant', verbose_name='Étudiants du binôme')),
            ],
            options={
                'verbose_name': 'Binôme',
                'verbose_name_plural': 'Binômes',
            },
        ),
        migrations.CreateModel(
            name='Evenements',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('en cours', 'En cours'), ('terminé', 'Terminé'), ('à venir', 'A venir')], default='à venir', max_length=20)),
                ('montant_minimal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('max_votants', models.PositiveIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evenements', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Groupe',
            fields=[
                ('id_groupe', models.AutoField(primary_key=True, serialize=False)),
                ('type_groupe', models.CharField(editable=False, max_length=10)),
                ('etudiants', models.ManyToManyField(related_name='groupes', to='api.etudiant')),
            ],
        ),
        migrations.CreateModel(
            name='Monome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(max_length=200)),
                ('programmation', models.CharField(choices=[('est programmé', 'Est programmé'), ('non programmé', 'Non programmé'), ('refus', 'Refus')], default='non programmé', max_length=50, verbose_name='Status de programmation')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monome_etudiant', to='api.etudiant')),
                ('maitre_memoire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monomes_encadres', to='api.enseignant')),
            ],
        ),
        migrations.CreateModel(
            name='ProcesVerbal',
            fields=[
                ('numero_pv', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('date_creation', models.DateField(auto_now_add=True)),
                ('est_valide', models.BooleanField(default=False)),
                ('etudiant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='proces_verbal', to='api.etudiant')),
            ],
        ),
        migrations.CreateModel(
            name='RoleJury',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('PRES', 'Président'), ('EXAM', 'Examinateur'), ('RAPP', 'Rapporteur')], max_length=4)),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='api.enseignant')),
            ],
        ),
        migrations.CreateModel(
            name='Soutenance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_soutenance', models.DateField()),
                ('heure_soutenance', models.TimeField()),
                ('salle', models.CharField(max_length=50)),
                ('resultat', models.CharField(blank=True, max_length=100, null=True)),
                ('mention', models.CharField(blank=True, max_length=100, null=True)),
                ('observations', models.TextField(blank=True)),
                ('groupe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='soutenance', to='api.groupe')),
                ('membres_jury', models.ManyToManyField(related_name='soutenances', through='api.RoleJury', to='api.enseignant')),
            ],
        ),
        migrations.AddField(
            model_name='rolejury',
            name='soutenance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles_jury', to='api.soutenance'),
        ),
        migrations.AlterUniqueTogether(
            name='rolejury',
            unique_together={('enseignant', 'soutenance')},
        ),
    ]
